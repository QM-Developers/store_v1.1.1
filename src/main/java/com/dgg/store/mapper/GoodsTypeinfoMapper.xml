<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dgg.store.mapper.GoodsTypeinfoMapper">
    <resultMap id="BaseResultMap" type="com.dgg.store.util.pojo.GoodsTypeinfo">
        <id column="goods_type_id" jdbcType="VARCHAR" property="goodsTypeId"/>
        <result column="goods_type_name" jdbcType="VARCHAR" property="goodsTypeName"/>
        <result column="goods_type_level" jdbcType="INTEGER" property="goodsTypeLevel"/>
        <result column="goods_type_pid" jdbcType="VARCHAR" property="goodsTypePid"/>
        <result column="is_deleted" jdbcType="TINYINT" property="isDeleted"/>
        <result column="delete_date" jdbcType="DATE" property="deleteDate"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    goods_type_id, goods_type_name, goods_type_level, goods_type_pid, is_deleted, delete_date
  </sql>
    <select id="selectByExample" parameterType="com.dgg.store.util.pojo.GoodsTypeinfoExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from goods_typeinfo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from goods_typeinfo
        where goods_type_id = #{goodsTypeId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from goods_typeinfo
    where goods_type_id = #{goodsTypeId,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.dgg.store.util.pojo.GoodsTypeinfoExample">
        delete from goods_typeinfo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.dgg.store.util.pojo.GoodsTypeinfo">
    insert into goods_typeinfo (goods_type_id, goods_type_name,goods_type_pid
      )
    values (#{goodsTypeId,jdbcType=VARCHAR}, #{goodsTypeName,jdbcType=VARCHAR},#{goodsTypePid,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.dgg.store.util.pojo.GoodsTypeinfo">
        insert into goods_typeinfo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="goodsTypeId != null">
                goods_type_id,
            </if>
            <if test="goodsTypeName != null">
                goods_type_name,
            </if>
            <if test="goodsTypeLevel != null">
                goods_type_level,
            </if>
            <if test="goodsTypePid != null">
                goods_type_pid,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="deleteDate != null">
                delete_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="goodsTypeId != null">
                #{goodsTypeId,jdbcType=VARCHAR},
            </if>
            <if test="goodsTypeName != null">
                #{goodsTypeName,jdbcType=VARCHAR},
            </if>
            <if test="goodsTypeLevel != null">
                #{goodsTypeLevel,jdbcType=INTEGER},
            </if>
            <if test="goodsTypePid != null">
                #{goodsTypePid,jdbcType=VARCHAR},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=TINYINT},
            </if>
            <if test="deleteDate != null">
                #{deleteDate,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.dgg.store.util.pojo.GoodsTypeinfoExample"
            resultType="java.lang.Long">
        select count(*) from goods_typeinfo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update goods_typeinfo
        <set>
            <if test="record.goodsTypeId != null">
                goods_type_id = #{record.goodsTypeId,jdbcType=VARCHAR},
            </if>
            <if test="record.goodsTypeName != null">
                goods_type_name = #{record.goodsTypeName,jdbcType=VARCHAR},
            </if>
            <if test="record.goodsTypeLevel != null">
                goods_type_level = #{record.goodsTypeLevel,jdbcType=INTEGER},
            </if>
            <if test="record.goodsTypePid != null">
                goods_type_pid = #{record.goodsTypePid,jdbcType=VARCHAR},
            </if>
            <if test="record.isDeleted != null">
                is_deleted = #{record.isDeleted,jdbcType=TINYINT},
            </if>
            <if test="record.deleteDate != null">
                delete_date = #{record.deleteDate,jdbcType=DATE},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update goods_typeinfo
        set goods_type_id = #{record.goodsTypeId,jdbcType=VARCHAR},
        goods_type_name = #{record.goodsTypeName,jdbcType=VARCHAR},
        goods_type_level = #{record.goodsTypeLevel,jdbcType=INTEGER},
        goods_type_pid = #{record.goodsTypePid,jdbcType=VARCHAR},
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
        delete_date = #{record.deleteDate,jdbcType=DATE}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.dgg.store.util.pojo.GoodsTypeinfo">
        update goods_typeinfo
        <set>
            <if test="goodsTypeName != null">
                goods_type_name = #{goodsTypeName,jdbcType=VARCHAR},
            </if>
            <if test="goodsTypeLevel != null">
                goods_type_level = #{goodsTypeLevel,jdbcType=INTEGER},
            </if>
            <if test="goodsTypePid != null">
                goods_type_pid = #{goodsTypePid,jdbcType=VARCHAR},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=TINYINT},
            </if>
            <if test="deleteDate != null">
                delete_date = #{deleteDate,jdbcType=DATE},
            </if>
        </set>
        where goods_type_id = #{goodsTypeId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dgg.store.util.pojo.GoodsTypeinfo">
    update goods_typeinfo
    set goods_type_name = #{goodsTypeName,jdbcType=VARCHAR},
      goods_type_level = #{goodsTypeLevel,jdbcType=INTEGER},
      goods_type_pid = #{goodsTypePid,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      delete_date = #{deleteDate,jdbcType=DATE}
    where goods_type_id = #{goodsTypeId,jdbcType=VARCHAR}
  </update>


    <resultMap id="treeMap" type="com.dgg.store.util.vo.core.TreeVO">
        <result column="goods_type_id" property="id" jdbcType="VARCHAR"/>
        <result column="goods_type_name" property="name" jdbcType="VARCHAR"/>
        <result column="goods_type_pid" property="pId" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="findTypeTree" resultMap="treeMap">
    SELECT goods_type_id, goods_type_name, goods_type_pid
    FROM goods_typeinfo
  </select>

    <resultMap id="GoodsTypeAttrMap" type="com.dgg.store.util.pojo.GoodsTypeAttr">
        <id column="goods_type_attr_id" jdbcType="VARCHAR" property="goodsTypeAttrId"/>
        <result column="goods_type_id" jdbcType="VARCHAR" property="goodsTypeId"/>
        <result column="goods_type_attr_name" jdbcType="VARCHAR" property="goodsTypeAttrName"/>
        <result column="goods_type_attr_value" jdbcType="VARCHAR" property="goodsTypeAttrValue"/>
        <result column="const" jdbcType="VARCHAR" property="goodsTypeAttrConst"/>
        <result column="input_type" jdbcType="VARCHAR" property="goodsTypeAttrInputType"/>
    </resultMap>
    <select id="findGoodsTypeAttr" resultMap="GoodsTypeAttrMap" parameterType="com.dgg.store.util.pojo.GoodsTypeAttr">
	SELECT gta.goods_type_attr_id, gta.goods_type_id, gta.goods_type_attr_name, gta.goods_type_attr_value, gta.goods_type_attr_const const, dtit.dict_name input_type
    FROM goods_type_attr gta
    LEFT JOIN dictionary dtit
    ON dtit.dict_code = gta.goods_type_attr_input_type
    WHERE gta.goods_type_id = #{goodsTypeId}
  </select>

    <delete id="cleanGoodsTypeAttr" parameterType="com.dgg.store.util.pojo.GoodsTypeAttr">
    DELETE FROM goods_type_attr
    WHERE goods_type_id = #{goodsTypeId}
  </delete>

    <insert id="insertGoodsTypeAttr" parameterType="com.dgg.store.util.pojo.GoodsTypeAttr">
    insert into goods_type_attr (goods_type_attr_id, goods_type_id, goods_type_attr_name,
    goods_type_attr_value, goods_type_attr_const,
    goods_type_attr_input_type)
    values (#{goodsTypeAttrId,jdbcType=VARCHAR}, #{goodsTypeId,jdbcType=VARCHAR}, #{goodsTypeAttrName,jdbcType=VARCHAR},
    #{goodsTypeAttrValue,jdbcType=VARCHAR}, #{goodsTypeAttrConst,jdbcType=VARCHAR},
    #{goodsTypeAttrInputType,jdbcType=VARCHAR})
  </insert>

    <select id="findGoodsTypeByPid" resultMap="BaseResultMap">
    SELECT gt.goods_type_id, gt.goods_type_name, gt.goods_type_pid
    FROM goods_typeinfo gt
    WHERE gt.goods_type_pid = #{typePid}
  </select>

    <delete id="deleteGoodsType">
    DELETE FROM goods_typeinfo
    WHERE goods_type_id = #{typeId}
  </delete>
</mapper>