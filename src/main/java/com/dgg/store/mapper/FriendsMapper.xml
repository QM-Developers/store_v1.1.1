<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dgg.store.mapper.FriendsMapper">
    <resultMap id="BaseResultMap" type="com.dgg.store.util.vo.friend.FriendVO">
        <id column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="user_phone" property="userPhone" jdbcType="VARCHAR"/>
        <result column="user_img" property="userImg" jdbcType="VARCHAR"/>
        <result column="user_area" property="userArea" jdbcType="VARCHAR"/>
        <result column="user_address" property="userAddress" jdbcType="VARCHAR"/>
        <result column="user_sex" property="userSex" jdbcType="VARCHAR"/>
        <result column="friend_id" property="friendId" jdbcType="VARCHAR"/>
        <result column="friend_user_id" property="friendUserId" jdbcType="VARCHAR"/>
        <result column="friend_origin" property="friendOrigin" jdbcType="VARCHAR"/>
        <result column="friend_remark_name" property="friendRemarkName" jdbcType="VARCHAR"/>
        <result column="friend_remark_text" property="friendRemarkText" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="FriendRequestMap" type="com.dgg.store.util.pojo.FriendRequest">
        <id column="request_id" property="requestId" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="user_img" property="userImg" jdbcType="VARCHAR"/>
        <result column="user_sex" property="userSex" jdbcType="VARCHAR"/>
        <result column="friend_id" property="friendId" jdbcType="VARCHAR"/>
        <result column="request_info" property="requestInfo" jdbcType="VARCHAR"/>
        <result column="friend_origin" property="friendOrigin" jdbcType="VARCHAR"/>
        <result column="response_info" property="responseInfo" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="DATE"/>
        <result column="request_state" property="requestState" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="findUserByPhoneOrName" resultMap="BaseResultMap">
        SELECT user_id,user_name, user_phone, user_img,user_area
        FROM user
        WHERE user_phone = #{userId}
        OR user_name LIKE CONCAT(#{userId},'%')
    </select>

    <select id="findCountBy" resultType="java.lang.Integer" parameterType="com.dgg.store.util.pojo.FriendRequest">
        SELECT COUNT(1)
        FROM friend_request
        WHERE 1 = 1
        <if test="userId != null and userId != ''">
            AND user_id = #{userId}
        </if>
        <if test="friendId != null and friendId != ''">
            AND friend_id = #{friendId}
        </if>
        <if test="requestState != null and requestState != ''">
            request_state = #{requestState}
        </if>
        <if test="isRead != null">
            AND is_read = #{isRead}
        </if>
    </select>

    <insert id="insertFriendRequest" parameterType="com.dgg.store.util.pojo.FriendRequest">
        INSERT INTO friend_request
        (request_id,user_id, friend_id, request_info,request_state,friend_origin)
        VALUES (#{requestId},#{userId},#{friendId},#{requestInfo},#{requestState},#{friendOrigin})
    </insert>

    <select id="findFriendRequest" resultMap="FriendRequestMap">
        SELECT fq.request_id,fq.request_info,fq.create_date,fq.request_state,fq.friend_origin,
            u.user_id,u.user_name,u.user_img,u.user_sex
        FROM friend_request fq
        INNER JOIN user u
        ON u.user_id = fq.user_id
        WHERE friend_id = #{userId}
        ORDER BY fq.create_date DESC
    </select>

    <update id="updateFriendRequest" parameterType="com.dgg.store.util.pojo.FriendRequest">
        UPDATE friend_request
        <set>
            <if test="isRead != null">
                is_read = #{isRead},
            </if>
            <if test="requestInfo != null and requestInfo != ''">
                request_info = #{requestInfo},
            </if>
            <if test="requestState != null and requestState != ''">
                request_state = #{requestState},
            </if>
        </set>
        WHERE
        <choose>
            <when test="userId != null and userId != ''">
                user_id = #{userId}
            </when>
            <when test="friendId != null and friendId != ''">
                friend_id = #{friendId}
            </when>
            <otherwise>
                request_id = #{requestId}
            </otherwise>
        </choose>
    </update>

    <insert id="insertFriend" parameterType="com.dgg.store.util.vo.friend.FriendVO">
        INSERT INTO friend
        (friend_id,user_id,friend_user_id , friend_origin)
        VALUES
        (#{friendId},#{userId},#{friendUserId},#{friendOrigin})
    </insert>

    <select id="findFriendList" resultMap="BaseResultMap">
        SELECT f.friend_id,f.friend_user_id,f.friend_remark_name,
            u.user_name,u.user_sex,u.user_img
        FROM friend f
        INNER JOIN user u
        ON u.user_id = f.user_id
        WHERE u.user_id IN
        (SELECT friend_user_id FROM friend WHERE user_id = #{userId})
        AND f.friend_user_id = #{userId}
    </select>

    <select id="findFriendData" resultMap="BaseResultMap">
        SELECT f.friend_id,f.user_id,f.friend_remark_name,f.friend_origin,f.friend_remark_text,
            u.user_name,u.user_phone,u.user_area,u.user_address,u.user_img
        FROM friend f
        INNER JOIN user u
        ON u.user_id = f.user_id
        WHERE f.friend_id = #{friendId}
    </select>

    <select id="findFriendDataById" resultMap="BaseResultMap">
        SELECT f.friend_user_id,f.user_id,f.friend_remark_name,
            u.user_name,u.user_img,u.user_sex
        FROM friend f
        INNER JOIN user u
        ON u.user_id = f.user_id
        WHERE f.user_id = #{userId}
        AND f.friend_user_id = #{friendUserId}
    </select>

    <update id="updateFriendRemark" parameterType="com.dgg.store.util.vo.friend.FriendVO">
        UPDATE friend
        <set>
            <if test="friendRemarkName != null">
                friend_remark_name = #{friendRemarkName},
            </if>
            <if test="friendRemarkText != null">
                friend_remark_text = #{friendRemarkText}
            </if>
        </set>
        WHERE friend_id = #{friendId}
    </update>

    <select id="findFriendExists" parameterType="com.dgg.store.util.pojo.FriendRequest" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM friend
        WHERE user_id = #{userId}
        AND friend_user_id = #{friendId}
    </select>
</mapper>