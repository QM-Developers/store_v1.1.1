<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dgg.store.mapper.CustomerMapper">
    <resultMap id="CustomerVO" type="com.dgg.store.util.vo.customer.CustomerVO">
        <result column="customer_id" property="customerId" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="user_phone" property="userPhone" jdbcType="VARCHAR"/>
        <result column="user_sex" property="userSex" jdbcType="VARCHAR"/>
        <result column="user_birthday" property="userBirthday" jdbcType="VARCHAR"/>
        <result column="user_address" property="userAddress" jdbcType="VARCHAR"/>
        <result column="user_img" property="userImg" jdbcType="VARCHAR"/>
        <result column="credit_rating" property="creditRating" jdbcType="INTEGER"/>
        <result column="business_address" property="businessAddress" jdbcType="VARCHAR"/>
        <result column="station" property="station" jdbcType="VARCHAR"/>
        <result column="customer_type" property="customerType" jdbcType="VARCHAR"/>
        <result column="had_account" property="hadAccount" jdbcType="INTEGER"/>
        <result column="user_card_front" property="userCardFront" jdbcType="VARCHAR"/>
        <result column="user_card_back" property="userCardBack" jdbcType="VARCHAR"/>
        <result column="user_card_hand" property="userCardHand" jdbcType="VARCHAR"/>
        <result column="update_date" property="userUpdateTime" jdbcType="VARCHAR"/>
        <result column="update_count" property="updateCount" jdbcType="INTEGER"/>
        <result column="user_create_date" property="userCreateDate" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="CustomerAccountRequest" type="com.dgg.store.util.pojo.CustomerAccountRequest">
        <result column="request_id" property="requestId" jdbcType="VARCHAR"/>
        <result column="customer_id" property="customerId" jdbcType="VARCHAR"/>
        <result column="customer_name" property="customerName" jdbcType="VARCHAR"/>
        <result column="merchandiser_id" property="merchandiserId" jdbcType="VARCHAR"/>
        <result column="merchandiser_name" property="merchandiserName" jdbcType="VARCHAR"/>
        <result column="checker_id" property="checkerId" jdbcType="VARCHAR"/>
        <result column="checker_name" property="checkerName" jdbcType="VARCHAR"/>
        <result column="request_status" property="requestStatus" jdbcType="INTEGER"/>
        <result column="create_date" property="createDate" jdbcType="DATE"/>
        <result column="proposer_id" property="proposerId" jdbcType="VARCHAR"/>
        <result column="proposer_name" property="proposerName" jdbcType="VARCHAR"/>
        <result column="request_reason" property="requestReason" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="CustomerRepertoryVO" type="com.dgg.store.util.vo.customer.CustomerRepertoryVO">
        <result column="customer_type" property="customerType" jdbcType="VARCHAR"/>
        <result column="my_team_id" property="myTeamId" jdbcType="VARCHAR"/>
        <result column="repertory_type" property="repertoryType" jdbcType="INTEGER"/>
    </resultMap>

    <insert id="insertCustomerRecord" parameterType="com.dgg.store.util.vo.customer.CustomerVO">
        INSERT INTO user_record
        (user_id,my_team_id,user_name,user_phone,
        user_birthday,user_address,user_sex,
        user_status,role_id,user_create_date,
        user_card_front,user_card_back,user_card_hand)
        VALUES
        (#{userId},#{myTeamId},#{userName},#{userPhone},
        #{userBirthday2},#{userAddress},#{userSex},
        #{userStatus},#{roleId},#{userCreateDate},
        #{userCardFront},#{userCardBack},#{userCardHand})
    </insert>

    <insert id="insertCustomer" parameterType="com.dgg.store.util.vo.customer.CustomerVO">
        INSERT INTO customer
        (customer_id, user_id, promoter_id,
        my_team_id, business_address, station,
        credit_rating,customer_type)
        VALUES (#{customerId},#{userId},#{promoterId},
        #{myTeamId},#{businessAddress},#{station},
        #{creditRating},#{customerType})
    </insert>

    <select id="listCustomer" resultMap="CustomerVO">
        SELECT c.customer_id,c.business_address,c.credit_rating,
        c.customer_type,c.station,c.had_account,
        u.user_name,u.user_phone,
        u.user_address,u.user_sex,u.user_img,
        u.user_id,
        IFNULL(u.user_birthday,"") user_birthday
        FROM customer c
        INNER JOIN user_view u
        ON u.user_id = c.user_id
        WHERE c.my_team_id = #{customer.myTeamId}
        AND c.promoter_id = #{customer.userId}
        <if test="customer.customerType != null and customer.customerType != ''">
            AND c.customer_type = #{customer.customerType}
        </if>
        <if test="customer.hadAccount != null">
            AND c.had_account = #{customer.hadAccount}
        </if>
        <if test="customer.userName != null">
            AND (u.user_name LIKE CONCAT("%",#{customer.userName},"%") OR u.user_phone = #{customer.userName})
        </if>
        LIMIT #{start},#{end}
    </select>

    <select id="countCustomer" parameterType="com.dgg.store.util.vo.customer.CustomerVO" resultType="java.lang.Integer">
        SELECT COUNT(0)
        FROM customer c
        INNER JOIN user_view u
        ON u.user_id = c.user_id
        WHERE c.my_team_id = #{myTeamId}
        AND c.promoter_id = #{userId}
        <if test="customerType != null and customerType != ''">
            AND c.customer_type = #{customerType}
        </if>
        <if test="hadAccount != null">
            AND c.had_account = #{hadAccount}
        </if>
        <if test="userName != null">
            AND (u.user_name LIKE CONCAT("%",#{userName},"%") OR u.user_phone = #{userName})
        </if>
    </select>

    <update id="updateCustomerUserRecord" parameterType="com.dgg.store.util.vo.customer.CustomerVO">
        UPDATE user_record
        <set>
            is_deleted = 0,
            <if test="userName != null">
                user_name = #{userName},
            </if>
            <if test="userPhone != null">
                user_phone = #{userPhone},
            </if>
            <if test="userSex != null">
                user_sex = #{userSex},
            </if>
            <if test="userBirthday != null">
                user_birthday = #{userBirthday2},
            </if>
            <if test="userAddress != null">
                user_address = #{userAddress},
            </if>
            <if test="hadAccount != null">
                had_account = #{hadAccount},
            </if>
        </set>
        WHERE user_id = (SELECT user_id FROM customer WHERE customer_id = #{customerId})
    </update>

    <update id="updateCustomerUser" parameterType="com.dgg.store.util.vo.customer.CustomerVO">
        UPDATE user
        <set>
            is_deleted = 0,
            <if test="userName != null">
                user_name = #{userName},
            </if>
            <if test="userPhone != null">
                user_phone = #{userPhone},
            </if>
            <if test="userSex != null">
                user_sex = #{userSex},
            </if>
            <if test="userBirthday != null">
                user_birthday = #{userBirthday2},
            </if>
            <if test="userAddress != null">
                user_address = #{userAddress},
            </if>
        </set>
        WHERE user_id = (SELECT user_id FROM customer WHERE customer_id = #{customerId})
    </update>

    <update id="updateCustomer" parameterType="com.dgg.store.util.vo.customer.CustomerVO">
        UPDATE customer
        <set>
            <if test="promoterId != null">
                promoter_id = #{promoterId},
            </if>
            <if test="merchandiserId != null">
                merchandiser_id = #{merchandiserId},
            </if>
            <if test="businessAddress != null">
                business_address = #{businessAddress},
            </if>
            <if test="station != null">
                station = #{station},
            </if>
            <if test="creditRating != null">
                credit_rating = #{creditRating},
            </if>
            <if test="hadAccount != null">
                had_account = #{hadAccount},
            </if>
            update_date = now(),
            update_count = update_count + 1,
        </set>
        WHERE customer_id = #{customerId}
    </update>

    <select id="getCustomer" resultMap="CustomerVO">
        SELECT c.customer_id,c.customer_type,c.had_account,
            c.credit_rating,c.business_address,c.station,
            c.update_count,c.update_date,
            u.user_name,u.user_phone,
            u.user_address,u.user_sex,u.user_create_date,
            u.user_card_front,u.user_card_back,u.user_card_hand,
            u.user_img,
            IFNULL(u.user_birthday,"") user_birthday
        FROM customer c
        INNER JOIN user_view u
        ON u.user_id = c.user_id
        WHERE c.customer_id = #{customerId}
    </select>

    <update id="insertFrontImage">
        UPDATE user u
        SET u.user_card_front = #{fileName}
        WHERE u.user_id = (SELECT user_id FROM customer WHERE customer_id = #{customerId})
    </update>

    <update id="insertFrontImageRecord">
        UPDATE user_record re
        SET re.user_card_front = #{fileName}
        WHERE re.user_id = (SELECT user_id FROM customer WHERE customer_id = #{customerId})
    </update>

    <update id="insertBackImage">
        UPDATE user u
        SET u.user_card_back = #{fileName}
        WHERE u.user_id = (SELECT user_id FROM customer WHERE customer_id = #{customerId})
    </update>

    <update id="insertBackImageRecord">
        UPDATE user_record re
        SET re.user_card_back = #{fileName}
        WHERE re.user_id = (SELECT user_id FROM customer WHERE customer_id = #{customerId})
    </update>

    <update id="insertHandImage">
        UPDATE user u
        SET u.user_card_hand = #{fileName}
        WHERE u.user_id = (SELECT user_id FROM customer WHERE customer_id = #{customerId})
    </update>

    <update id="insertHandImageRecord">
        UPDATE user_record re
        SET re.user_card_hand = #{fileName}
        WHERE re.user_id = (SELECT user_id FROM customer WHERE customer_id = #{customerId})
    </update>

    <select id="getRepertoryLevel" resultType="java.lang.Integer">
        SELECT repertory_type FROM
          customer_repertory cr
        WHERE cr.my_team_id = #{myTeamId}
        AND cr.customer_type = #{customerType}
    </select>

    <select id="countRepertoryLevel" resultType="java.lang.Integer"
            parameterType="com.dgg.store.util.vo.customer.CustomerRepertoryVO">
        SELECT COUNT(0)
        FROM customer_repertory cr
        WHERE cr.my_team_id = #{myTeamId}
        AND cr.customer_type = #{customerType}
    </select>

    <insert id="insertRepertoryLevel" parameterType="com.dgg.store.util.vo.customer.CustomerRepertoryVO">
        INSERT INTO customer_repertory
        (customer_type, my_team_id, repertory_type)
        VALUES
        (#{customerType},#{myTeamId},#{repertoryType})
    </insert>

    <select id="listMerchandiserFirst" parameterType="com.dgg.store.util.vo.customer.CustomerVO" resultMap="CustomerVO">
        SELECT t1.user_id ,t1.user_name,t1.user_img
        FROM
        (SELECT u.user_id,u.user_name,u.my_team_id,
        u.team_department_id,u.user_img,
        qpr.permission_id
        FROM user u
        INNER JOIN position_permission_re ppr
        ON ppr.position_id = u.position_id
        INNER JOIN qm_permission_re qpr
        ON qpr.qm_permission_id = ppr.qm_permission_id
        UNION
        SELECT u.user_id,u.user_name,u.my_team_id,
        u.team_department_id,u.user_img,
        qpr.permission_id
        FROM user u
        INNER JOIN user_qm_permission_re uqpr
        ON uqpr.user_id = u.user_id
        INNER JOIN qm_permission_re qpr
        ON qpr.qm_permission_id = uqpr.qm_permission_id) t1
        WHERE t1.my_team_id = #{myTeamId}
        AND t1.permission_id = #{promoterId}
        AND t1.team_department_id NOT IN (
        SELECT department_id
        FROM qm_branch
        WHERE my_team_id = #{myTeamId}
        AND branch_type = 2)
        <if test="departmentId != null and departmentId != ''">
            AND t1.team_department_id = #{departmentId}
        </if>
    </select>

    <select id="listMerchandiserSecond" parameterType="com.dgg.store.util.vo.customer.CustomerVO"
            resultMap="CustomerVO">
        SELECT t1.user_id ,t1.user_name,t1.user_img
        FROM
        (SELECT u.user_id,u.user_name,u.my_team_id,
        u.team_department_id,u.user_img,
        qpr.permission_id
        FROM user u
        INNER JOIN position_permission_re ppr
        ON ppr.position_id = u.position_id
        INNER JOIN qm_permission_re qpr
        ON qpr.qm_permission_id = ppr.qm_permission_id
        UNION
        SELECT u.user_id,u.user_name,u.my_team_id,
        u.team_department_id,u.user_img,
        qpr.permission_id
        FROM user u
        INNER JOIN user_qm_permission_re uqpr
        ON uqpr.user_id = u.user_id
        INNER JOIN qm_permission_re qpr
        ON qpr.qm_permission_id = uqpr.qm_permission_id) t1
        LEFT JOIN qm_branch qb
        ON qb.department_id = t1.team_department_id
        WHERE t1.my_team_id = #{myTeamId}
        AND t1.permission_id = #{promoterId}
        <if test="departmentId != null and departmentId != ''">
            AND t1.team_department_id = #{departmentId}
        </if>
        AND qb.branch_type = 2
    </select>

    <select id="listAccountChecker" resultMap="CustomerVO">
        SELECT t1.user_id ,t1.user_name,t1.user_img
        FROM
        (SELECT u.user_id,u.user_name,u.my_team_id,
            u.team_department_id,u.user_img,
            qpr.permission_id
        FROM user u
        INNER JOIN position_permission_re ppr
        ON ppr.position_id = u.position_id
        INNER JOIN qm_permission_re qpr
        ON qpr.qm_permission_id = ppr.qm_permission_id
        UNION
        SELECT u.user_id,u.user_name,u.my_team_id,
            u.team_department_id,u.user_img,
            qpr.permission_id
        FROM user u
        INNER JOIN user_qm_permission_re uqpr
        ON uqpr.user_id = u.user_id
        INNER JOIN qm_permission_re qpr
        ON qpr.qm_permission_id = uqpr.qm_permission_id) t1
        LEFT JOIN qm_branch qb
        ON qb.department_id = t1.team_department_id
        WHERE t1.my_team_id = #{myTeamId}
        <if test="departmentId != null">
            AND t1.team_department_id = #{departmentId}
        </if>
        AND t1.permission_id = #{permissionId}
    </select>

    <insert id="insertCustomerAccount" parameterType="com.dgg.store.util.pojo.CustomerAccountRequest">
        INSERT INTO
        customer_account_request
        (request_id, customer_id, customer_name,
        merchandiser_id, merchandiser_name, checker_id,
        checker_name, request_status, create_date,
        proposer_id,proposer_name,request_reason)
        VALUES
        (#{requestId},#{customerId},#{customerName},
        #{merchandiserId},#{merchandiserName},#{checkerId},
        #{checkerName},#{requestStatus},#{createDate},
        #{proposerId},(SELECT user_name FROM user WHERE user_id = #{proposerId}),#{requestReason})
    </insert>

    <update id="updateCustomerAccountById" parameterType="com.dgg.store.util.pojo.CustomerAccountRequest">
        UPDATE customer_account_request
        <set>
            request_status = #{requestStatus},
        </set>
        WHERE request_id = #{requestId}
    </update>

    <insert id="updateRecordToAccount">
        INSERT INTO user
        SELECT * FROM user_record
        WHERE user_id = (SELECT user_id FROM customer WHERE customer_id = #{customerId})
    </insert>

    <delete id="deleteRecord">
        DELETE FROM user_record
        WHERE user_id = (SELECT user_id FROM customer WHERE customer_id = #{customerId})
    </delete>

    <select id="getCustomerAccount" resultMap="CustomerAccountRequest">
        SELECT request_id, customer_id, customer_name,
        merchandiser_id, merchandiser_name, checker_id,
        checker_name, request_status, create_date,
        proposer_id,proposer_name,request_reason
        FROM customer_account_request
        WHERE request_id = #{requestId}
    </select>

    <select id="listCustomerAccount" resultMap="CustomerAccountRequest">
        SELECT request_id, customer_id, customer_name,
        merchandiser_id, merchandiser_name, checker_id,
        checker_name, request_status, create_date,
        proposer_id,proposer_name,request_reason
        FROM customer_account_request
        WHERE 1 = 1
        <if test="request.customerId != null">
            AND customer_id = #{request.customerId}
        </if>
        <if test="request.checkerId != null">
            AND checker_id = #{request.checkerId}
        </if>
        <if test="request.merchandiserId != null">
            AND merchandiser_id = #{request.merchandiserId}
        </if>
        <if test="request.proposerId != null">
            AND proposer_id = #{request.proposerId}
        </if>
        <foreach collection="request.statusList" index="i" close=")" open=" AND request_status IN (" separator=","
                 item="status">
            #{status}
        </foreach>
    </select>

    <select id="getDeviceToken" resultType="java.lang.String">
        SELECT umeng_device_token
        FROM user
        WHERE user_id = #{userId}
    </select>

    <insert id="insertRecordByUser">
        INSERT INTO user_record
        SELECT * FROM user
        WHERE user_id = (SELECT user_id FROM customer WHERE customer_id = #{customerId})
    </insert>

    <delete id="deleteUser">
        DELETE FROM user
        WHERE user_id = (SELECT user_id FROM customer WHERE customer_id = #{customerId})
    </delete>

    <select id="countHadCustomerAccount" resultType="java.lang.Integer">
        SELECT COUNT(0)
        FROM user
        WHERE user_phone =
        (SELECT user_phone
        FROM user_view uv
        INNER JOIN customer c
        ON c.user_id = uv.user_id
        WHERE c.customer_id = #{customerId})
        AND my_team_id = #{myTeamId}
    </select>

    <select id="getCustomerExist" resultType="java.lang.Integer">
        SELECT COUNT(0)
        FROM customer c
        INNER JOIN user_view u
        ON u.user_id = c.user_id
        WHERE c.promoter_id = #{userId}
        AND u.user_phone = #{userPhone}
        AND c.my_team_id = #{myTeamId}
    </select>

    <select id="listPromoter" resultMap="CustomerVO">
        SELECT t1.user_id ,t1.user_name,t1.user_img
        FROM
        (SELECT u.user_id,u.user_name,u.my_team_id,
            u.team_department_id,u.user_img,
            qpr.permission_id
        FROM user u
        INNER JOIN position_permission_re ppr
        ON ppr.position_id = u.position_id
        INNER JOIN qm_permission_re qpr
        ON qpr.qm_permission_id = ppr.qm_permission_id
        UNION
        SELECT u.user_id,u.user_name,u.my_team_id,
            u.team_department_id,u.user_img,
            qpr.permission_id
        FROM user u
        INNER JOIN user_qm_permission_re uqpr
        ON uqpr.user_id = u.user_id
        INNER JOIN qm_permission_re qpr
        ON qpr.qm_permission_id = uqpr.qm_permission_id) t1
        LEFT JOIN qm_branch qb
        ON qb.department_id = t1.team_department_id
        WHERE t1.my_team_id = #{myTeamId}
        AND t1.permission_id = #{permissionId}
    </select>

    <select id="listRepertoryLevel" resultMap="CustomerRepertoryVO">
        SELECT *
        FROM customer_repertory
        WHERE my_team_id = #{myTeamId}
    </select>

    <select id="getUserImage" resultType="java.lang.String">
        SELECT user_img
        FROM user
        WHERE user_id = #{userId}
    </select>

    <select id="getDepartmentName" resultType="java.lang.String">
        SELECT td.team_department_name
        FROM team_department td
        INNER JOIN user u
        ON u.team_department_id = td.team_department_id
        WHERE u.user_id = #{userId}
    </select>

    <select id="countCustomerAccount" parameterType="com.dgg.store.util.pojo.CustomerAccountRequest" resultType="java.lang.Integer">
        SELECT COUNT(0)
        FROM customer_account_request
        WHERE 1 = 1
        <if test="customerId != null">
            AND customer_id = #{customerId}
        </if>
        <if test="checkerId != null">
            AND checker_id = #{checkerId}
        </if>
        <if test="merchandiserId != null">
            AND merchandiser_id = #{merchandiserId}
        </if>
        <if test="proposerId != null">
            AND proposer_id = #{proposerId}
        </if>
        <foreach collection="statusList" index="i" close=")" open=" AND request_status IN (" separator="," item="status">
            #{status}
        </foreach>
    </select>
</mapper>