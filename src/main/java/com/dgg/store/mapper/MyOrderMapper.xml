<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dgg.store.mapper.MyOrderMapper">
  <resultMap id="BaseResultMap" type="com.dgg.store.util.pojo.MyOrder">
    <id column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="order_status" jdbcType="TINYINT" property="orderStatus" />
    <result column="order_status_before" jdbcType="TINYINT" property="orderStatusBefore" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="seller_message" jdbcType="VARCHAR" property="sellerMessage" />
    <result column="buyer_message" jdbcType="VARCHAR" property="buyerMessage" />
    <result column="refund_message" jdbcType="VARCHAR" property="refundMessage" />
    <result column="freight" jdbcType="REAL" property="freight" />
    <result column="payment_type" jdbcType="TINYINT" property="paymentType" />
    <result column="payment_status" jdbcType="TINYINT" property="paymentStatus" />
    <result column="shopping_address" jdbcType="VARCHAR" property="shoppingAddress" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="refund_date" jdbcType="TIMESTAMP" property="refundDate" />
    <result column="finish_date" jdbcType="TIMESTAMP" property="finishDate" />
    <result column="merchandiser_id" jdbcType="TIMESTAMP" property="merchandiserId" />
    <result column="merchandiser_name" jdbcType="TIMESTAMP" property="merchandiserName" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.dgg.store.util.pojo.MyOrder">
    <result column="logistics_status" jdbcType="LONGVARCHAR" property="logisticsStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, order_status, order_status_before, user_id, user_name, seller_message,
    buyer_message, refund_message, freight, payment_type, payment_status, shopping_address,
    create_date, refund_date, finish_date
  </sql>
  <sql id="Blob_Column_List">
    logistics_status
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.dgg.store.util.pojo.MyOrderExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from my_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.dgg.store.util.pojo.MyOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from my_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from my_order
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from my_order
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.dgg.store.util.pojo.MyOrderExample">
    delete from my_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.dgg.store.util.pojo.MyOrder">
    insert into my_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="orderStatusBefore != null">
        order_status_before,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="sellerMessage != null">
        seller_message,
      </if>
      <if test="buyerMessage != null">
        buyer_message,
      </if>
      <if test="refundMessage != null">
        refund_message,
      </if>
      <if test="freight != null">
        freight,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="paymentStatus != null">
        payment_status,
      </if>
      <if test="shoppingAddress != null">
        shopping_address,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="refundDate != null">
        refund_date,
      </if>
      <if test="finishDate != null">
        finish_date,
      </if>
      <if test="logisticsStatus != null">
        logistics_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="orderStatusBefore != null">
        #{orderStatusBefore,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sellerMessage != null">
        #{sellerMessage,jdbcType=VARCHAR},
      </if>
      <if test="buyerMessage != null">
        #{buyerMessage,jdbcType=VARCHAR},
      </if>
      <if test="refundMessage != null">
        #{refundMessage,jdbcType=VARCHAR},
      </if>
      <if test="freight != null">
        #{freight,jdbcType=REAL},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="paymentStatus != null">
        #{paymentStatus,jdbcType=TINYINT},
      </if>
      <if test="shoppingAddress != null">
        #{shoppingAddress,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="refundDate != null">
        #{refundDate,jdbcType=TIMESTAMP},
      </if>
      <if test="finishDate != null">
        #{finishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="logisticsStatus != null">
        #{logisticsStatus,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dgg.store.util.pojo.MyOrderExample" resultType="java.lang.Long">
    select count(*) from my_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update my_order
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderStatus != null">
        order_status = #{record.orderStatus,jdbcType=TINYINT},
      </if>
      <if test="record.orderStatusBefore != null">
        order_status_before = #{record.orderStatusBefore,jdbcType=TINYINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerMessage != null">
        seller_message = #{record.sellerMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.buyerMessage != null">
        buyer_message = #{record.buyerMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.refundMessage != null">
        refund_message = #{record.refundMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.freight != null">
        freight = #{record.freight,jdbcType=REAL},
      </if>
      <if test="record.paymentType != null">
        payment_type = #{record.paymentType,jdbcType=TINYINT},
      </if>
      <if test="record.paymentStatus != null">
        payment_status = #{record.paymentStatus,jdbcType=TINYINT},
      </if>
      <if test="record.shoppingAddress != null">
        shopping_address = #{record.shoppingAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundDate != null">
        refund_date = #{record.refundDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishDate != null">
        finish_date = #{record.finishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logisticsStatus != null">
        logistics_status = #{record.logisticsStatus,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update my_order
    set order_id = #{record.orderId,jdbcType=VARCHAR},
    order_status = #{record.orderStatus,jdbcType=TINYINT},
    order_status_before = #{record.orderStatusBefore,jdbcType=TINYINT},
    user_id = #{record.userId,jdbcType=VARCHAR},
    user_name = #{record.userName,jdbcType=VARCHAR},
    seller_message = #{record.sellerMessage,jdbcType=VARCHAR},
    buyer_message = #{record.buyerMessage,jdbcType=VARCHAR},
    refund_message = #{record.refundMessage,jdbcType=VARCHAR},
    freight = #{record.freight,jdbcType=REAL},
    payment_type = #{record.paymentType,jdbcType=TINYINT},
    payment_status = #{record.paymentStatus,jdbcType=TINYINT},
    shopping_address = #{record.shoppingAddress,jdbcType=VARCHAR},
    create_date = #{record.createDate,jdbcType=TIMESTAMP},
    refund_date = #{record.refundDate,jdbcType=TIMESTAMP},
    finish_date = #{record.finishDate,jdbcType=TIMESTAMP},
    logistics_status = #{record.logisticsStatus,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update my_order
    set order_id = #{record.orderId,jdbcType=VARCHAR},
    order_status = #{record.orderStatus,jdbcType=TINYINT},
    order_status_before = #{record.orderStatusBefore,jdbcType=TINYINT},
    user_id = #{record.userId,jdbcType=VARCHAR},
    user_name = #{record.userName,jdbcType=VARCHAR},
    seller_message = #{record.sellerMessage,jdbcType=VARCHAR},
    buyer_message = #{record.buyerMessage,jdbcType=VARCHAR},
    refund_message = #{record.refundMessage,jdbcType=VARCHAR},
    freight = #{record.freight,jdbcType=REAL},
    payment_type = #{record.paymentType,jdbcType=TINYINT},
    payment_status = #{record.paymentStatus,jdbcType=TINYINT},
    shopping_address = #{record.shoppingAddress,jdbcType=VARCHAR},
    create_date = #{record.createDate,jdbcType=TIMESTAMP},
    refund_date = #{record.refundDate,jdbcType=TIMESTAMP},
    finish_date = #{record.finishDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dgg.store.util.pojo.MyOrder">
    update my_order
    <set>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="orderStatusBefore != null">
        order_status_before = #{orderStatusBefore,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sellerMessage != null">
        seller_message = #{sellerMessage,jdbcType=VARCHAR},
      </if>
      <if test="buyerMessage != null">
        buyer_message = #{buyerMessage,jdbcType=VARCHAR},
      </if>
      <if test="refundMessage != null">
        refund_message = #{refundMessage,jdbcType=VARCHAR},
      </if>
      <if test="freight != null">
        freight = #{freight,jdbcType=REAL},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="paymentStatus != null">
        payment_status = #{paymentStatus,jdbcType=TINYINT},
      </if>
      <if test="shoppingAddress != null">
        shopping_address = #{shoppingAddress,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="refundDate != null">
        refund_date = #{refundDate,jdbcType=TIMESTAMP},
      </if>
      <if test="finishDate != null">
        finish_date = #{finishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="logisticsStatus != null">
        logistics_status = #{logisticsStatus,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dgg.store.util.pojo.MyOrder">
    update my_order
    set order_status = #{orderStatus,jdbcType=TINYINT},
    order_status_before = #{orderStatusBefore,jdbcType=TINYINT},
    user_id = #{userId,jdbcType=VARCHAR},
    user_name = #{userName,jdbcType=VARCHAR},
    seller_message = #{sellerMessage,jdbcType=VARCHAR},
    buyer_message = #{buyerMessage,jdbcType=VARCHAR},
    refund_message = #{refundMessage,jdbcType=VARCHAR},
    freight = #{freight,jdbcType=REAL},
    payment_type = #{paymentType,jdbcType=TINYINT},
    payment_status = #{paymentStatus,jdbcType=TINYINT},
    shopping_address = #{shoppingAddress,jdbcType=VARCHAR},
    create_date = #{createDate,jdbcType=TIMESTAMP},
    refund_date = #{refundDate,jdbcType=TIMESTAMP},
    finish_date = #{finishDate,jdbcType=TIMESTAMP},
    logistics_status = #{logisticsStatus,jdbcType=LONGVARCHAR}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dgg.store.util.pojo.MyOrder">
    update my_order
    set order_status = #{orderStatus,jdbcType=TINYINT},
      order_status_before = #{orderStatusBefore,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      seller_message = #{sellerMessage,jdbcType=VARCHAR},
      buyer_message = #{buyerMessage,jdbcType=VARCHAR},
      refund_message = #{refundMessage,jdbcType=VARCHAR},
      freight = #{freight,jdbcType=REAL},
      payment_type = #{paymentType,jdbcType=TINYINT},
      payment_status = #{paymentStatus,jdbcType=TINYINT},
      shopping_address = #{shoppingAddress,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      refund_date = #{refundDate,jdbcType=TIMESTAMP},
      finish_date = #{finishDate,jdbcType=TIMESTAMP}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
      















  <resultMap id="MyOrderListVO" type="com.dgg.store.util.vo.order.MyOrderListVO">
    <result column="standard_id" property="standardId" jdbcType="VARCHAR"/>
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR"/>
    <result column="goods_price" property="goodsPrice" jdbcType="FLOAT"/>
    <result column="goods_image" property="goodsImage" jdbcType="VARCHAR"/>
    <result column="goods_describe" property="goodsDescribe" jdbcType="VARCHAR"/>
    <result column="standard_name" property="standardName" jdbcType="VARCHAR"/>
    <result column="buy_num" property="buyNum" jdbcType="INTEGER"/>
    <result column="refund_num" property="refundNum" jdbcType="INTEGER"/>
  </resultMap>

  <resultMap id="FreightTemp" type="com.dgg.store.util.pojo.FreightTemp">
    <result column="freight_name" jdbcType="VARCHAR" property="freightName" />
    <result column="weight_allowance" jdbcType="REAL" property="weightAllowance" />
    <result column="start_range" jdbcType="REAL" property="startRange" />
    <result column="start_price" jdbcType="REAL" property="startPrice" />
    <result column="increase_range" jdbcType="REAL" property="increaseRange" />
    <result column="increase_price" jdbcType="REAL" property="increasePrice" />
  </resultMap>

  <insert id="insertOrderList" parameterType="com.dgg.store.util.vo.order.MyOrderListVO">
    INSERT INTO my_order_list
    (order_id, goods_name, goods_price,
    goods_image, goods_describe, standard_name,
    buy_num, refund_num,standard_id)
    VALUES
    (#{orderId},#{goodsName},#{goodsPrice},
    #{goodsImage},#{goodsDescribe},#{standardName},
    #{buyNum},#{refundNum},#{standardId})
  </insert>

  <select id="getOrderList" resultMap="MyOrderListVO">
    SELECT gi.goods_name,gi.goods_describe,
    gs.standard_name,gs.standard_price goods_price,gs.standard_id
    FROM goodsinfo gi
    INNER JOIN goods_standard gs
    ON gs.goods_id = gi.goods_id
    WHERE gs.standard_id = #{standardId}
  </select>

  <select id="listImage" resultType="java.lang.String">
    SELECT image_id
    FROM goods_image
    WHERE goods_id = #{goodsId}
    ORDER BY goods_img_type
  </select>

  <select id="listOrderList" resultMap="MyOrderListVO">
    SELECT mol.goods_name, mol.goods_price, mol.goods_image,
    mol.standard_name, mol.buy_num,mol.standard_id,
    mol.refund_num
    FROM my_order_list mol
    WHERE mol.order_id = #{orderId}
  </select>

  <select id="getImage" resultType="java.lang.String">
    SELECT image_path
    FROM image_space
    WHERE image_id = #{imageId}
  </select>

  <update id="updateListByPrimaryKeySelective" parameterType="com.dgg.store.util.vo.order.MyOrderListVO">
    UPDATE my_order_list
    <set>
      <if test="goodsName != null">
        goods_name = #{goodsName},
      </if>
      <if test="goodsPrice != null">
        goods_price = #{goodsPrice},
      </if>
      <if test="goodsImage != null">
        goods_image = #{goodsImage},
      </if>
      <if test="goodsDescribe != null">
        goods_describe = #{goodsDescribe},
      </if>
      <if test="standardName != null">
        standard_name = #{standardName},
      </if>
      <if test="buyNum != null">
        buy_num = #{buyNum},
      </if>
      <if test="refundNum != null">
        refund_num = #{refundNum},
      </if>
    </set>
    WHERE order_id = #{orderId}
    <if test="standardId != null">
      AND standard_id = #{standardId}
    </if>
  </update>

  <select id="listFreightTemp" resultMap="FreightTemp">
    SELECT freight_name, weight_allowance,start_range,
    start_price, increase_range,increase_price
    FROM freight_temp
    WHERE my_team_id = #{myTeamId}
  </select>

  <select id="getCustomerRepertory" resultType="java.lang.Integer">
    SELECT repertory_type
    FROM customer_repertory
    WHERE my_team_id = #{myTeamId}
    AND customer_type = #{customerType}
  </select>

  <select id="getCustomerType" resultType="java.lang.String">
    SELECT customer_type
    FROM customer
    WHERE user_id = #{userId}
    AND my_team_id = #{myTeamId}
  </select>

  <select id="getLatLng1" resultType="java.lang.String">
    SELECT lat_lng
    FROM my_team
    WHERE my_team_id = #{myTeamId}
  </select>

  <select id="getLatLng2" resultType="java.lang.String">
    SELECT lat_lng
    FROM qm_branch qb
    INNER JOIN user u
    ON u.team_department_id = qb.department_id
    INNER JOIN customer c
    ON c.merchandiser_id = u.user_id
    WHERE c.user_id = #{userId}
    AND c.my_team_id = #{myTeamId}
  </select>

  <select id="getGoodsRepertoryFirst" resultType="java.lang.Integer">
    SELECT gs.standard_count
    FROM goods_standard gs
    WHERE gs.standard_id = #{standardId}
  </select>

  <select id="getGoodsRepertorySecond" resultType="java.lang.Integer">
    SELECT IFNULL(MAX(qbg.standard_count),0)
    FROM qm_branch_goods qbg
    INNER JOIN qm_branch qb
    ON qb.branch_id = qbg.branch_id
    INNER JOIN user u
    ON u.team_department_id = qb.department_id
    INNER JOIN customer c
    ON c.merchandiser_id = u.user_id
    WHERE c.user_id = #{userId}
    AND c.my_team_id = #{myTeamId}
    AND qbg.standard_id = #{standardId}
  </select>

  <update id="updateRepertoryFirst">
    UPDATE goods_standard gs
    SET gs.standard_count = #{repertory}
    WHERE gs.standard_id = #{standardId}
  </update>

  <update id="updateRepertorySecond">
    UPDATE qm_branch_goods qbg
    SET qbg.standard_count = #{repertory}
    WHERE qbg.standard_id = #{standardId}
    AND qbg.branch_id =
    (
        SELECT branch_id
        FROM qm_branch qb
        INNER JOIN user u
        ON u.team_department_id = qb.department_id
        WHERE u.user_id = #{userId}
    )
  </update>

  <select id="countSalesOrder" resultType="java.lang.Integer">
    SELECT COUNT(0)
    FROM my_order mo
    WHERE 1 = 1
    <if test="order.orderStatus != null">
      AND mo.order_status = #{orderStatus}
    </if>
    <if test="order.createDate != null and order.finishDate != null">
      AND mo.create_date BETWEEN #{createDate} AND #{finishDate}
    </if>
    <if test="order.paymentType != null">
      AND mo.payment_type = #{paymentType}
    </if>
    <if test="order.paymentStatus != null">
      AND mo.payment_status = #{paymentStatus}
    </if>
    AND mo.user_id IN
    (
    SELECT c.user_id
    FROM customer c
    WHERE c.merchandiser_id = #{userId}
    )
  </select>

  <select id="listSalesOrder" resultMap="BaseResultMap">
    SELECT mo.order_id, mo.order_status, mo.order_status_before,
    mo.user_id,mo.user_name, mo.seller_message,
    mo.buyer_message,mo.refund_message, mo.freight,
    mo.payment_type, mo.payment_status, mo.shopping_address,
    mo.create_date, mo.refund_date, mo.finish_date
    FROM my_order mo
    WHERE 1 = 1
    <if test="order.orderStatus != null">
      AND mo.order_status = #{orderStatus}
    </if>
    <if test="order.createDate != null and order.finishDate != null">
      AND mo.create_date BETWEEN #{createDate} AND #{finishDate}
    </if>
    <if test="order.paymentType != null">
      AND mo.payment_type = #{paymentType}
    </if>
    <if test="order.paymentStatus != null">
      AND mo.payment_status = #{paymentStatus}
    </if>
    AND mo.user_id IN
    (
    SELECT c.user_id
    FROM customer c
    WHERE c.merchandiser_id = #{userId}
    )
  </select>

  <insert id="insert" parameterType="com.dgg.store.util.pojo.MyOrder">
    insert into my_order (order_id, order_status, order_status_before,
    user_id, user_name, seller_message,
    buyer_message, refund_message, freight,
    payment_type, payment_status, shopping_address,
    create_date, refund_date, finish_date,
    logistics_status)
    values (#{orderId,jdbcType=VARCHAR}, #{orderStatus,jdbcType=TINYINT}, #{orderStatusBefore,jdbcType=TINYINT},
    #{userId,jdbcType=VARCHAR},
    (SELECT user_name FROM (SELECT user_name FROM user WHERE user_id = #{userId}) t)
    , #{sellerMessage,jdbcType=VARCHAR},
    #{buyerMessage,jdbcType=VARCHAR}, #{refundMessage,jdbcType=VARCHAR}, #{freight,jdbcType=REAL},
    #{paymentType,jdbcType=TINYINT}, #{paymentStatus,jdbcType=TINYINT}, #{shoppingAddress,jdbcType=VARCHAR},
    #{createDate,jdbcType=TIMESTAMP}, #{refundDate,jdbcType=TIMESTAMP}, #{finishDate,jdbcType=TIMESTAMP},
    #{logisticsStatus,jdbcType=LONGVARCHAR})
  </insert>


  <select id="countFinanceOrder" resultType="java.lang.Integer">
    SELECT COUNT(0)
    FROM my_order mo
    INNER JOIN customer c
    ON c.user_id = mo.user_id
    INNER JOIN user u
    ON u.user_id = c.merchandiser_id
    WHERE c.my_team_id = #{myTeamId}
    <if test="order.orderStatus != null">
      AND mo.order_status = #{orderStatus}
    </if>
    <if test="order.createDate != null and order.finishDate != null">
      AND mo.create_date BETWEEN #{createDate} AND #{finishDate}
    </if>
    <if test="order.paymentType != null">
      AND mo.payment_type = #{paymentType}
    </if>
    <if test="order.paymentStatus != null">
      AND mo.payment_status = #{paymentStatus}
    </if>
  </select>

  <select id="listFinanceOrder" resultMap="BaseResultMap">
    SELECT mo.order_id, mo.order_status, mo.order_status_before,
    mo.user_id,mo.user_name, mo.seller_message,
    mo.buyer_message,mo.refund_message, mo.freight,
    mo.payment_type, mo.payment_status, mo.shopping_address,
    mo.create_date, mo.refund_date, mo.finish_date,
    u.user_id merchandiser_id,u.user_name merchandiser_name
    FROM my_order mo
    INNER JOIN customer c
    ON c.user_id = mo.user_id
    INNER JOIN user u
    ON u.user_id = c.merchandiser_id
    WHERE c.my_team_id = #{myTeamId}
    <if test="order.orderStatus != null">
      AND mo.order_status = #{orderStatus}
    </if>
    <if test="order.createDate != null and order.finishDate != null">
      AND mo.create_date BETWEEN #{createDate} AND #{finishDate}
    </if>
    <if test="order.paymentType != null">
      AND mo.payment_type = #{paymentType}
    </if>
    <if test="order.paymentStatus != null">
      AND mo.payment_status = #{paymentStatus}
    </if>
  </select>
</mapper>